name: Safe Merge on Label

on:
  pull_request:
    types:
      - labeled

jobs:
  safe-merge:
    if: github.event.label.name == 'merge'
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Get PR information
      - name: Get PR info
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            console.log(`PR #${pr.data.number}: target branch = ${pr.data.base.ref}`);
            return JSON.stringify(pr.data);
          result-encoding: string

      # Verify PR is mergeable
      - name: Verify PR is mergeable
        uses: actions/github-script@v7
        id: merge_check
        with:
          script: |
            const pr = JSON.parse('${{ steps.pr_info.outputs.result }}');
            console.log(`PR #${pr.number}: mergeable_state = ${pr.mergeable_state}`);

            if (pr.mergeable_state !== 'clean') {
              core.setFailed(`PR #${pr.number} is not mergeable (state: ${pr.mergeable_state}). Merge aborted.`);
            } else {
              console.log(`PR #${pr.number} is mergeable. Proceeding with merge...`);
            }

      # Merge PR
      - name: Merge PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = JSON.parse('${{ steps.pr_info.outputs.result }}');
            console.log(`Merging PR #${pr.number} into branch '${pr.base.ref}'...`);

            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'merge'
            });

            console.log(`PR #${pr.number} successfully merged into '${pr.base.ref}'`);
