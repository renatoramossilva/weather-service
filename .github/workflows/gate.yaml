name: gate

on:
  pull_request:
    types:
      - labeled
  issue_comment:
    types:
      - created

jobs:
  safe-merge:
    if: |
      (github.event_name == 'pull_request' && github.event.label.name == 'merge') ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       github.event.comment.body == 'regate')
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Get PR information
      - name: Get PR info
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request 
              ? context.payload.pull_request.number 
              : context.payload.issue.number;

            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            console.log(`PR #${pr.data.number}: target branch = ${pr.data.base.ref}, state = ${pr.data.mergeable_state}`);
            return JSON.stringify(pr.data);
          result-encoding: string

      # Verify 'merge' label exists (for comment trigger)
      - name: Verify 'merge' label exists (for comment trigger)
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        id: label_check
        with:
          script: |
            const pr = JSON.parse('${{ steps.pr_info.outputs.result }}');
            const labels = pr.labels.map(l => l.name);
            if (!labels.includes('merge')) {
              core.setFailed(`PR #${pr.number} does not have label 'merge'. Comment trigger ignored.`);
            } else {
              console.log(`PR #${pr.number} has label 'merge'. Proceeding with merge.`);
            }

      # Verify PR has no conflicts (ignore unstable mergeable_state)
      - name: Verify PR is mergeable
        uses: actions/github-script@v7
        id: merge_check
        with:
          script: |
            const pr = JSON.parse('${{ steps.pr_info.outputs.result }}');
            console.log(`PR #${pr.number}: mergeable_state = ${pr.mergeable_state}`);

            if (pr.mergeable_state === 'dirty') {
              core.setFailed(`PR #${pr.number} has conflicts. Merge aborted.`);
            } else {
              console.log(`PR #${pr.number} is ready to merge (state: ${pr.mergeable_state})`);
            }

      # Merge PR
      - name: Merge PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = JSON.parse('${{ steps.pr_info.outputs.result }}');
            console.log(`Merging PR #${pr.number} into branch '${pr.base.ref}'...`);

            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'merge'
            });

            console.log(`PR #${pr.number} successfully merged into '${pr.base.ref}'`);
